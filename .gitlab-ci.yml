stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy
  - cleanup
  

#dev
build-dev:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - runner-dev
  script:
    - echo "Build docker image ...."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - docker build -t $CI_REGISTRY_IMAGE/$HARBOR_IMAGE_DEV/hacom.client.manager-kong-api:1.0.0 --rm=true -f "./Dockerfile" .
  only:
    - develop 
deploy-dev:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.  
  tags:
    - runner-dev
  script:
    - echo "Push docker image to registry ..."
    - docker push $CI_REGISTRY_IMAGE/$HARBOR_IMAGE_DEV/hacom.client.manager-kong-api:1.0.0
  only:
    - develop
cleanup-dev:
  stage: cleanup
  tags:
    - runner-dev
  script:
    - echo "Cleaning up..."
    - docker rmi $CI_REGISTRY_IMAGE/$HARBOR_IMAGE_DEV/hacom.client.manager-kong-api:1.0.0
  only:
    - develop
#std

build-std:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - runner-dev
  script:
    - echo "Update submodule"
    - git submodule sync --recursive
    - git submodule update --init --recursive --remote 
    - echo "Build docker image ...."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - docker build -t $CI_REGISTRY_IMAGE/$HARBOR_IMAGE_DEV/hacom.api.web-stagging:1.0.0 --rm=true -f "./Api/Dockerfile" .
  only:
    - stagging 
deploy-std:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.  
  tags:
    - runner-dev
  script:
    - echo "Push docker image to registry ..."
    - docker push $CI_REGISTRY_IMAGE/$HARBOR_IMAGE_DEV/hacom.api.web-stagging:1.0.0
  only:
    - stagging


# prod
build-prod:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - runner-dev
  script:
    - echo "Update submodule"
    - git submodule sync --recursive
    - git submodule update --init --recursive --remote 
    - echo "Build docker image ...."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - ls
    - docker build -t $CI_REGISTRY_IMAGE/$HARBOR_IMAGE_DEV/hacom.api.web-prod:1.0.0 --rm=true -f "./Api/Dockerfile" .
  only:
    - production 
deploy-prod:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.  
  tags:
    - runner-dev
  script:
    - echo "Push docker image to registry ..."
    - docker push $CI_REGISTRY_IMAGE/$HARBOR_IMAGE_DEV/hacom.api.web-prod:1.0.0
  only:
    - production

